// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Villa_resort.Infrastructure.Data;

#nullable disable

namespace Villa_resort.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251008162956_AddVillaNumber")]
    partial class AddVillaNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Villa_resort.Domain.Entities.VillaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Occupancy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("Sqft")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 10, 8, 21, 59, 55, 97, DateTimeKind.Local).AddTicks(2837),
                            Description = "A luxurious villa with royal amenities.",
                            ImageUrl = "https://example.com/images/royal_villa.jpg",
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Price = 250.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(2025, 10, 8, 21, 59, 55, 97, DateTimeKind.Local).AddTicks(2839)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 10, 8, 21, 59, 55, 97, DateTimeKind.Local).AddTicks(2846),
                            Description = "A beautiful villa located right on the beach.",
                            ImageUrl = "https://example.com/images/beachfront_villa.jpg",
                            Name = "Beachfront Villa",
                            Occupancy = 6,
                            Price = 300.0,
                            Sqft = 1800,
                            UpdatedDate = new DateTime(2025, 10, 8, 21, 59, 55, 97, DateTimeKind.Local).AddTicks(2847)
                        });
                });

            modelBuilder.Entity("Villa_resort.Domain.Entities.VillaNumber", b =>
                {
                    b.Property<int>("villaNumber")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaID")
                        .HasColumnType("int");

                    b.HasKey("villaNumber");

                    b.HasIndex("VillaID");

                    b.ToTable("VillaNumbers");

                    b.HasData(
                        new
                        {
                            villaNumber = 101,
                            VillaID = 1
                        },
                        new
                        {
                            villaNumber = 102,
                            VillaID = 1
                        },
                        new
                        {
                            villaNumber = 201,
                            VillaID = 2
                        },
                        new
                        {
                            villaNumber = 202,
                            VillaID = 2
                        });
                });

            modelBuilder.Entity("Villa_resort.Domain.Entities.VillaNumber", b =>
                {
                    b.HasOne("Villa_resort.Domain.Entities.VillaModel", "VillaModel")
                        .WithMany()
                        .HasForeignKey("VillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VillaModel");
                });
#pragma warning restore 612, 618
        }
    }
}
