// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Villa_resort.Infrastructure.Data;

#nullable disable

namespace Villa_resort.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250813162220_insertdrecordtotable")]
    partial class insertdrecordtotable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Villa_resort.Domain.Entities.VillaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 8, 13, 21, 52, 19, 942, DateTimeKind.Local).AddTicks(3753),
                            Description = "A luxurious villa with royal amenities.",
                            ImageUrl = "https://example.com/images/royal_villa.jpg",
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Price = 250.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(2025, 8, 13, 21, 52, 19, 942, DateTimeKind.Local).AddTicks(3754)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 8, 13, 21, 52, 19, 942, DateTimeKind.Local).AddTicks(3758),
                            Description = "A beautiful villa located right on the beach.",
                            ImageUrl = "https://example.com/images/beachfront_villa.jpg",
                            Name = "Beachfront Villa",
                            Occupancy = 6,
                            Price = 300.0,
                            Sqft = 1800,
                            UpdatedDate = new DateTime(2025, 8, 13, 21, 52, 19, 942, DateTimeKind.Local).AddTicks(3759)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
